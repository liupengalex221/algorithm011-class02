{\rtf1\ansi\ansicpg936\cocoartf2509
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Medium;\f1\fnil\fcharset134 PingFangSC-Medium;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red29\green29\blue29;\red255\green255\blue255;\red0\green0\blue255;
\red255\green255\blue254;\red0\green0\blue0;\red19\green120\blue72;\red144\green1\blue18;\red15\green112\blue1;
}
{\*\expandedcolortbl;;\cssrgb\c14902\c14902\c14902;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c100000;
\cssrgb\c100000\c100000\c99608;\cssrgb\c0\c0\c0;\cssrgb\c3529\c53333\c35294;\cssrgb\c63922\c8235\c8235;\cssrgb\c0\c50196\c0;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl320\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://leetcode-cn.com/problems/valid-anagram/"}}{\fldrslt 
\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 242. 
\f1 \'d3\'d0\'d0\'a7\'b5\'c4\'d7\'d6\'c4\'b8\'d2\'ec\'ce\'bb\'b4\'ca}}
\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\sl400\partightenfactor0

\f2\fs26 \cf4 \cb5 \strokec4 class\cf6 \strokec6 \'a0Solution\'a0\{\cb1 \
\pard\pardeftab720\sl400\partightenfactor0
\cf6 \cb5 \'a0\'a0\'a0\cf4 \strokec4 public\cf6 \strokec6 \'a0\cf4 \strokec4 boolean\cf6 \strokec6 \'a0isAnagram(String\'a0s,\'a0String\'a0t)\'a0\{\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf4 \strokec4 if\cf6 \strokec6 (s.length()!=t.length())\'a0\{\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf4 \strokec4 return\cf6 \strokec6 \'a0\cf4 \strokec4 false\cf6 \strokec6 ;\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\}\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf4 \strokec4 int\cf6 \strokec6 []\'a0counter\'a0=\cf4 \strokec4 new\cf6 \strokec6 \'a0\cf4 \strokec4 int\cf6 \strokec6 [\cf7 \strokec7 26\cf6 \strokec6 ];\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf4 \strokec4 for\cf6 \strokec6 (\cf4 \strokec4 int\cf6 \strokec6 \'a0i=\cf7 \strokec7 0\cf6 \strokec6 ;i<s.length();i++)\'a0\{\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0counter[s.charAt(i)-\cf8 \strokec8 'a'\cf6 \strokec6 ]++;\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0counter[t.charAt(i)-\cf8 \strokec8 'a'\cf6 \strokec6 ]--;\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\}\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf4 \strokec4 for\cf6 \strokec6 \'a0(\cf4 \strokec4 int\cf6 \strokec6 \'a0count:counter)\'a0\{\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf4 \strokec4 if\cf6 \strokec6 (count!=\cf7 \strokec7 0\cf6 \strokec6 )\'a0\{\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf4 \strokec4 return\cf6 \strokec6 \'a0\cf4 \strokec4 false\cf6 \strokec6 ;\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\}\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\}\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf4 \strokec4 return\cf6 \strokec6 \'a0\cf4 \strokec4 true\cf6 \strokec6 ;\cb1 \
\cb5 \'a0\'a0\'a0\}\cb1 \
\
\cb5 \}\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://leetcode-cn.com/problems/two-sum/"}}{\fldrslt 
\f0\fs28 \cf2 \cb3 \strokec2 1. 
\f1 \'c1\'bd\'ca\'fd\'d6\'ae\'ba\'cd}}
\f0\fs28 \cf2 \cb3 \strokec2 \
\pard\pardeftab720\sl400\partightenfactor0

\f2\fs26 \cf4 \cb5 \strokec4 class\cf6 \strokec6 \'a0Solution\'a0\{\cb1 \
\pard\pardeftab720\sl400\partightenfactor0
\cf6 \cb5 \'a0\'a0\'a0\'a0\cf4 \strokec4 public\cf6 \strokec6 \'a0\cf4 \strokec4 int\cf6 \strokec6 []\'a0twoSum(\cf4 \strokec4 int\cf6 \strokec6 []\'a0nums,\'a0\cf4 \strokec4 int\cf6 \strokec6 \'a0target)\'a0\{\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0Map<Integer,Integer>\'a0smap=\cf4 \strokec4 new\cf6 \strokec6 \'a0HashMap<>();\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf4 \strokec4 for\cf6 \strokec6 (\cf4 \strokec4 int\cf6 \strokec6 \'a0i=\cf7 \strokec7 0\cf6 \strokec6 ;i<nums.length;i++)\'a0\{\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf4 \strokec4 if\cf6 \strokec6 (smap.containsKey(target-nums[i]))\'a0\{\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf4 \strokec4 return\cf6 \strokec6 \'a0\cf4 \strokec4 new\cf6 \strokec6 \'a0\cf4 \strokec4 int\cf6 \strokec6 []\{i,smap.get(target-nums[i])\};\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\}\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0smap.put(nums[i],i);\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\}\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf4 \strokec4 return\cf6 \strokec6 \'a0null;\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cb1 \
\cb5 \'a0\'a0\'a0\'a0\}\cb1 \
\cb5 \}\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://leetcode-cn.com/problems/n-ary-tree-preorder-traversal/"}}{\fldrslt 
\f0\fs28 \cf2 \cb3 \strokec2 589. N
\f1 \'b2\'e6\'ca\'f7\'b5\'c4\'c7\'b0\'d0\'f2\'b1\'e9\'c0\'fa}}
\f0\fs28 \cf2 \cb3 \strokec2 \
\pard\pardeftab720\sl400\partightenfactor0

\f2\fs26 \cf9 \cb5 \strokec9 /*\cf6 \cb1 \strokec6 \
\cf9 \cb5 \strokec9 //\'a0Definition\'a0for\'a0a\'a0Node.\cf6 \cb1 \strokec6 \
\cf9 \cb5 \strokec9 class\'a0Node\'a0\{\cf6 \cb1 \strokec6 \
\cf9 \cb5 \strokec9 \'a0\'a0\'a0\'a0public\'a0int\'a0val;\cf6 \cb1 \strokec6 \
\cf9 \cb5 \strokec9 \'a0\'a0\'a0\'a0public\'a0List<Node>\'a0children;\cf6 \cb1 \strokec6 \
\
\cf9 \cb5 \strokec9 \'a0\'a0\'a0\'a0public\'a0Node()\'a0\{\}\cf6 \cb1 \strokec6 \
\
\cf9 \cb5 \strokec9 \'a0\'a0\'a0\'a0public\'a0Node(int\'a0_val)\'a0\{\cf6 \cb1 \strokec6 \
\cf9 \cb5 \strokec9 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0val\'a0=\'a0_val;\cf6 \cb1 \strokec6 \
\cf9 \cb5 \strokec9 \'a0\'a0\'a0\'a0\}\cf6 \cb1 \strokec6 \
\
\cf9 \cb5 \strokec9 \'a0\'a0\'a0\'a0public\'a0Node(int\'a0_val,\'a0List<Node>\'a0_children)\'a0\{\cf6 \cb1 \strokec6 \
\cf9 \cb5 \strokec9 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0val\'a0=\'a0_val;\cf6 \cb1 \strokec6 \
\cf9 \cb5 \strokec9 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0children\'a0=\'a0_children;\cf6 \cb1 \strokec6 \
\cf9 \cb5 \strokec9 \'a0\'a0\'a0\'a0\}\cf6 \cb1 \strokec6 \
\cf9 \cb5 \strokec9 \};\cf6 \cb1 \strokec6 \
\cf9 \cb5 \strokec9 */\cf6 \cb1 \strokec6 \
\
\pard\pardeftab720\sl400\partightenfactor0
\cf4 \cb5 \strokec4 class\cf6 \strokec6 \'a0Solution\'a0\{\cb1 \
\pard\pardeftab720\sl400\partightenfactor0
\cf6 \cb5 \'a0\'a0\'a0\'a0\cf4 \strokec4 public\cf6 \strokec6 \'a0List<Integer>\'a0preorder(Node\'a0root)\'a0\{\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0List<Integer>\'a0res\'a0=\cf4 \strokec4 new\cf6 \strokec6 \'a0ArrayList<>();\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0dfs(res,root);\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf4 \strokec4 return\cf6 \strokec6 \'a0res;\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cb1 \
\cb5 \'a0\'a0\'a0\'a0\}\cb1 \
\cb5 \'a0\'a0\'a0\'a0\cf4 \strokec4 void\cf6 \strokec6 \'a0dfs(List<Integer>\'a0res,Node\'a0root)\'a0\{\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf4 \strokec4 if\cf6 \strokec6 (root\'a0==\'a0null\'a0)\'a0\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\{\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf4 \strokec4 return\cf6 \strokec6 ;\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\}\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0res.add(root.val);\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf4 \strokec4 for\cf6 \strokec6 (Node\'a0c\'a0:\'a0root.children)\'a0\{\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0dfs(res,c);\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\}\cb1 \
\
\
\
\
\
\
\cb5 \'a0\'a0\'a0\'a0\}\cb1 \
\cb5 \}\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://leetcode-cn.com/problems/group-anagrams/"}}{\fldrslt 
\f0\fs28 \cf2 \cb3 \strokec2 49. 
\f1 \'d7\'d6\'c4\'b8\'d2\'ec\'ce\'bb\'b4\'ca\'b7\'d6\'d7\'e9}}
\f0\fs28 \cf2 \cb3 \strokec2 \
\pard\pardeftab720\sl400\partightenfactor0

\f2\fs26 \cf4 \cb5 \strokec4 class\cf6 \strokec6 \'a0Solution\'a0\{\cb1 \
\pard\pardeftab720\sl400\partightenfactor0
\cf6 \cb5 \'a0\'a0\'a0\'a0\cf4 \strokec4 public\cf6 \strokec6 \'a0List<List<String>>\'a0groupAnagrams(String[]\'a0strs)\'a0\{\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf4 \strokec4 if\cf6 \strokec6 (strs.length==\cf7 \strokec7 0\cf6 \strokec6 )\'a0\{\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf4 \strokec4 return\cf6 \strokec6 \'a0null;\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\}\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0Map<String,List>\'a0smap=\cf4 \strokec4 new\cf6 \strokec6 \'a0HashMap<>();\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf4 \strokec4 for\cf6 \strokec6 (String\'a0a:strs)\'a0\{\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf4 \strokec4 char\cf6 \strokec6 []\'a0chars=a.toCharArray();\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0Arrays.sort(chars);\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0String\'a0key=String.valueOf(chars);\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf4 \strokec4 if\cf6 \strokec6 (!smap.containsKey(key))\'a0\{\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0smap.put(key,\cf4 \strokec4 new\cf6 \strokec6 \'a0ArrayList<String>());\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\}\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0smap.get(key).add(a);\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\}\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf4 \strokec4 return\cf6 \strokec6 \'a0\cf4 \strokec4 new\cf6 \strokec6 \'a0ArrayList(smap.values());\cb1 \
\
\
\cb5 \'a0\'a0\'a0\'a0\}\cb1 \
\cb5 \}\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://leetcode-cn.com/problems/binary-tree-inorder-traversal/"}}{\fldrslt 
\f0\fs28 \cf2 \cb3 \strokec2 94. 
\f1 \'b6\'fe\'b2\'e6\'ca\'f7\'b5\'c4\'d6\'d0\'d0\'f2\'b1\'e9\'c0\'fa}}
\f0\fs28 \cf2 \cb3 \strokec2 \
\pard\pardeftab720\sl400\partightenfactor0

\f2\fs26 \cf9 \cb5 \strokec9 /**\cf6 \cb1 \strokec6 \
\cf9 \cb5 \strokec9 \'a0*\'a0Definition\'a0for\'a0a\'a0binary\'a0tree\'a0node.\cf6 \cb1 \strokec6 \
\cf9 \cb5 \strokec9 \'a0*\'a0public\'a0class\'a0TreeNode\'a0\{\cf6 \cb1 \strokec6 \
\cf9 \cb5 \strokec9 \'a0*\'a0\'a0\'a0\'a0\'a0int\'a0val;\cf6 \cb1 \strokec6 \
\cf9 \cb5 \strokec9 \'a0*\'a0\'a0\'a0\'a0\'a0TreeNode\'a0left;\cf6 \cb1 \strokec6 \
\cf9 \cb5 \strokec9 \'a0*\'a0\'a0\'a0\'a0\'a0TreeNode\'a0right;\cf6 \cb1 \strokec6 \
\cf9 \cb5 \strokec9 \'a0*\'a0\'a0\'a0\'a0\'a0TreeNode(int\'a0x)\'a0\{\'a0val\'a0=\'a0x;\'a0\}\cf6 \cb1 \strokec6 \
\cf9 \cb5 \strokec9 \'a0*\'a0\}\cf6 \cb1 \strokec6 \
\cf9 \cb5 \strokec9 \'a0*/\cf6 \cb1 \strokec6 \
\pard\pardeftab720\sl400\partightenfactor0
\cf4 \cb5 \strokec4 class\cf6 \strokec6 \'a0Solution\'a0\{\cb1 \
\pard\pardeftab720\sl400\partightenfactor0
\cf6 \cb5 \'a0\'a0\'a0\'a0\cf4 \strokec4 public\cf6 \strokec6 \'a0List<Integer>\'a0inorderTraversal(TreeNode\'a0root)\'a0\{\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0List<Integer>\'a0res=\cf4 \strokec4 new\cf6 \strokec6 \'a0ArrayList<>();\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0dfs(res,root);\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf4 \strokec4 return\cf6 \strokec6 \'a0res;\cb1 \
\
\cb5 \'a0\'a0\'a0\'a0\}\cb1 \
\cb5 \'a0\'a0\'a0\'a0\cf4 \strokec4 void\cf6 \strokec6 \'a0dfs(List<Integer>\'a0res,TreeNode\'a0root)\'a0\{\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf4 \strokec4 if\cf6 \strokec6 (root\'a0==\'a0null\'a0)\'a0\{\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf4 \strokec4 return\cf6 \strokec6 ;\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\}\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0dfs(res,root.left);\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0res.add(root.val);\cb1 \
\cb5 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0dfs(res,root.right);\cb1 \
\cb5 \'a0\'a0\'a0\'a0\}\cb1 \
\cb5 \}\cb1 \
}